---
title: "Differential Abundance Analysis of Peatland SIP-Labelled Taxa Using DESeq2"
subtitle: "05 SIP differential abundance modelling: comparing between gradients using DESeq2"
author: "Justus Nweze"
email: "justus.nweze@bc.cas.cz"
date: "`r Sys.Date()`"
bibliography: references.bib
link-citations: true
csl: fems-microbiology-ecology.csl
always_allow_html: true
output:
  rmarkdown::github_document:
    toc: true
    toc_depth: 5
    number_sections: false
    dev: "png"
    df_print: "kable"
    keep_html: true
editor_options: 
  chunk_output_type: console


Purpose

The script is designed to:

    Identify differentially abundant ASVs or taxa between different conditions or treatments in a Stable Isotope Probing (SIP) experiment.

    Utilize the DESeq2 package in R for statistical analysis.

    Focus on taxa that have incorporated the isotope (e.g., ¬π¬≥C or ¬π‚ÅµN), inferred through significant enrichment in labeled fractions compared to controls or baseline.

More specifically, the script:

    Loads count data and sample metadata.

    Constructs a DESeq2 dataset object.

    Filters for sufficient read counts.

    Performs differential abundance testing between experimental groups (e.g., labeled vs. unlabeled, or between treatment groups).

    Extracts results with log2 fold changes and adjusted p-values.

    Writes results to file and possibly generates summary plots or tables (depending on the extent of the script).

# Biological Questions Addressed by the Script

 

    Does NH‚ÇÑ‚Å∫ amendment change the microbial community's response to ¬π¬≥CH‚ÇÑ?
    (i.e., Is the ¬π¬≥C-incorporation response different in CH4+NH‚ÇÑCl compared to CH4?) 

    This is the main question of the script. It is tested by: 
        Model Design: Using a factorial design: ~ Treatment + Label + Treatment:Label
        Key Statistic: Extracting the interaction term (TreatmentCH4_NH4Cl.LabelLabelled) from the DESeq2 results.
        Interpretation:
            Positive log‚ÇÇ fold change: The ¬π¬≥C-incorporation response is stronger in the CH4+NH‚ÇÑCl treatment.
            Negative log‚ÇÇ fold change: The response is weaker (suppressed) in the CH4+NH‚ÇÑCl treatment.
             
         

    Which specific taxa (ASVs) have a ¬π¬≥C-incorporation response that is significantly modulated by NH‚ÇÑ‚Å∫?
    This is the taxonomic resolution of the first question. The script identifies the exact microbial taxa (e.g., Methylomonas, Methylobacter) whose shift into Heavy DNA is enhanced or suppressed by ammonium. 
     

 
üîç Secondary Biological Questions 

    Which taxa are significantly enriched in Heavy DNA of ¬π¬≥CH‚ÇÑ-amended cores compared to ¬π¬≤CH‚ÇÑ controls?
    While the primary focus is the interaction, the script also extracts all results, allowing you to identify core methanotrophs that are enriched in Labelled cores, regardless of treatment. 

    Are the microbial responses consistent with those found by the primary ANCOM-BC analysis?
    The script is designed to be a complementary secondary analysis. A key follow-up question is: 

        "Do the taxa identified by DESeq2 as being affected by NH‚ÇÑ‚Å∫ overlap with the top responders from the ANCOM-BC analysis?"  

     

 
üìä Supporting Statistical Questions (Used to Address the Biology) 

    Is there a significant main effect of Label? (Is there a general difference between Labelled and Unlabelled cores?)
    Is there a significant main effect of Treatment? (Is there a general difference between the CH‚ÇÑ and CH‚ÇÑ+NH‚ÇÑCl communities?)
    Is there a significant interaction effect? (Does the effect of Label depend on Treatment?)
       

---
```{r setup}
.libPaths(c("/home/nwezejus/R/x86_64-pc-linux-gnu-library/4.5.1", .libPaths()))
```



```{r}
#| label = "libraries",
#| include = F,
#| message = FALSE,
#| warning = FALSE
# .libPaths(c('~/R/library', .libPaths())) # Uncomment if you have no write access to R path
library(extrafont) # Tools for using fonts, CRAN v0.17
library(tidyverse) # Easily Install and Load the 'Tidyverse', CRAN v1.3.0 
library(magrittr) # A Forward-Pipe Operator for R, CRAN v2.0.1 
library(scales) # Scale Functions for Visualization, CRAN v1.1.1 
library(paletteer) # Comprehensive Collection of Color Palettes, [github::EmilHvitfeldt/paletteer] v1.5.0.9000 
library(svglite) # An 'SVG' Graphics Device, CRAN v1.2.3.2 
library(ragg) # Graphic Devices Based on AGG, CRAN v1.2.5 
library(viridis) # Default Color Maps from 'matplotlib', CRAN v0.5.1
library(ggsci) # Scientific Journal and Sci-Fi Themed Color Palettes for 'ggplot2', CRAN v2.9
library(ggtext) # Improved Text Rendering Support for 'ggplot2', CRAN v0.1.1
library(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax, CRAN v1.3.1 
library(visdat) # Preliminary Visualisation of Data, CRAN v0.5.3
library(parallel) # Support for Parallel computation in R, CRAN v4.0.3
library(glue) # Interpreted String Literals, CRAN v1.4.2
library(ashr) # implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate
library(patchwork) # The Composer of Plots, CRAN v1.1.1
library(ggpubr) # 'ggplot2' Based Publication Ready Plots, CRAN v0.6.0 
library(vegan) # Community Ecology Package, CRAN v2.5-7
library(phyloseq) # Handling and analysis of high-throughput microbiome census data, Bioconductor v1.32.0 
library(speedyseq) # Faster implementations of phyloseq functions, [github::mikemc/speedyseq] v0.4.0 
library(Biostrings) # Efficient manipulation of biological strings, Bioconductor v2.56.0 
library(HTSSIP) # High Throughput Sequencing of Stable Isotope Probing Data Analysis, CRAN v1.4.1 
library(DESeq2) # Differential gene expression analysis based on the negative binomial distribution, Bioconductor v1.28.1 
# library(ggtree) # an R package for visualization of tree and annotation data, Bioconductor v2.2.4 
# loading it here causes annoying class warnings
library(DESeq2)
library(BiocParallel)  # Load it directly to avoid issues
library(dplyr)
```

```{r}
#| label = "style settings",
#| echo = F,
#| message = F,
#| warning = F,
#| results = "asis",
#| cache = T
options(width = 90, knitr.table.format = "html", getClass.msg = FALSE) # suppress tidytree class warning
cache.path <- "05_SIP_diff_abund_between_DESeq2_cache/"
fig.path <- "05_SIP_diff_abund_between_DESeq2_figures/"
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  cache = TRUE,
  dev = c("svglite", "ragg_png"),
  dev.args = list(svglite = list(bg = 'white', fix_text_size = FALSE), ragg_png = list(bg = 'white')),
  dpi = 300,
  #  fig.width = 12,
  #  fig.height = 8,
  cache.path = cache.path,
  fig.path = fig.path
)
f_name <- "DejaVu Sans" #sub("\\s//", "", f_name)
f_size <- 14
font_import(pattern = "DejaVuSans\\.", prompt = FALSE)
loadfonts() # registers fonts
theme_set(theme_bw(base_size = f_size, base_family = f_name))
```


     

```{r Prepare}
# ============================================================================= 
# STEP 1: PREPARE THE DATA
# ============================================================================= 
# This is where we get our microbiome data ready for analysis.
# We're looking for microbes that used ¬π¬≥C-methane in a stable isotope probing (SIP) experiment.

# Set the folder where your data is stored
data_path <- "./DADA2_pseudo/"

# Name of your main data file (contains ASVs, taxonomy, and sample info)
Proj_name <- "Peatland_SIP"
Ps_file <- paste0(Proj_name, "_seq_prev_filt.Rds")

# Load the full phyloseq object (your entire dataset)
Ps_obj_SIP <- readRDS(paste0(data_path, Ps_file))

# Keep only the "Heavy" DNA fractions ‚Äî this is where ¬π¬≥C-labeled DNA should be
# Only microbes that ate the ¬π¬≥C-methane will be in this heavy part of the gradient
Ps_obj_SIP_Heavy <- subset_samples(Ps_obj_SIP, Density.zone == "Heavy")

# Convert counts to absolute abundance (DESeq2 needs real counts, not percentages)
# This step makes sure we're not comparing proportions, but actual read counts
Ps_obj_SIP_abs <- transform_sample_counts(Ps_obj_SIP_Heavy, function(x) x)

# Make sure R treats Treatment and Label as categories (factors), not just text
# This helps DESeq2 understand the experimental design
sample_data(Ps_obj_SIP_abs)$Treatment <- factor(sample_data(Ps_obj_SIP_abs)$Treatment)
sample_data(Ps_obj_SIP_abs)$Label <- factor(sample_data(Ps_obj_SIP_abs)$Label)


# ============================================================================= 
# STEP 2: CREATE A DESeq2 OBJECT
# ============================================================================= 
# DESeq2 is a tool for finding genes (or ASVs) that are different between groups.
# We need to convert our phyloseq object into a format DESeq2 can use.

# Define a safe function to convert phyloseq ‚Üí DESeq2
# It makes sure the "Unlabelled" group is the baseline (reference) for comparison
phyloseq_to_deseq2_safe <- function(ps = ps_obj, test_condition = "Density.zone", ref_level = "Light") {
  require(magrittr)   # For %>%, the "pipe" operator
  require(forcats)    # For releveling factors
  require(phyloseq)   # For phyloseq objects

  # Make sure the reference group (e.g., "Unlabelled") is first ‚Äî DESeq2 needs this!
  sample_data(ps)[[test_condition]] %<>% fct_relevel(., ref_level)
  
  # Create a formula like ~ Label (tells DESeq2 what to test)
  expr <- as.formula(paste("~", test_condition))
  
  # Convert and return the DESeq2 object
  phyloseq_to_deseq2(ps, expr) %>%
    return(.)
}

# Convert our filtered data to a DESeq2 object
# We're comparing "Labelled" vs "Unlabelled" ‚Äî who used the ¬π¬≥C-methane?
DESeq2_obj <- phyloseq_to_deseq2_safe(
  ps = Ps_obj_SIP_abs,
  test_condition = "Label",       # The variable we're testing
  ref_level = "Unlabelled"        # "Unlabelled" is the baseline
)


# Add the full experimental design: we want to test:
# - Main effect of Treatment (CH4 vs CH4+NH‚ÇÑCl)
# - Main effect of Label (Unlabelled vs Labelled)
# - Interaction: Does NH‚ÇÑ‚Å∫ change the ¬π¬≥C-incorporation response?
design(DESeq2_obj) <- ~ Treatment + Label + Treatment:Label


# ============================================================================= 
# STEP 3: RUN THE DESeq2 MODEL
# ============================================================================= 
# Now we run the actual statistical test.
# DESeq2 will estimate variance, normalize counts, and test for differences.

# Run the model using multiple CPU cores (4) to speed it up
# BPPARAM = BiocParallel::MulticoreParam(4) tells it to use 4 cores
DESeq2_obj <- DESeq(
  DESeq2_obj, 
  parallel = TRUE, 
  BPPARAM = BiocParallel::MulticoreParam(4)
)


# ============================================================================= 
# STEP 4: EXTRACT AND SAVE RESULTS
# ============================================================================= 
# Now that the model is done, we extract the results.

# Extract the INTERACTION term: "Does NH‚ÇÑ‚Å∫ change the ¬π¬≥C-incorporation response?"
# This is the most interesting biological question
res_interaction <- results(DESeq2_obj, name = "TreatmentCH4_NH4Cl.LabelLabelled")

# Or extract ALL results (for full exploration)
res_all <- results(DESeq2_obj)

# Convert results to a data frame and add ASV IDs as a column
res_df <- as.data.frame(res_all) %>%
  rownames_to_column("taxon")

# Get taxonomy (Phylum, Genus, etc.) from the original dataset
tax <- tax_table(Ps_obj_SIP) %>% 
  as.data.frame() %>% 
  rownames_to_column("taxon") %>%
  rename_with(~ gsub(" ", "_", .), .cols = everything())  # Clean column names (no spaces)

# Combine results with taxonomy so we know which microbes responded
res_with_tax <- res_df %>%
  left_join(tax, by = "taxon")

# Optional: Sort by p-value (most significant first)
res_sig_tax <- res_with_tax %>%
  arrange(padj)

# Save the full results with taxonomy to a TSV file (easy to open in Excel)
write_tsv(res_sig_tax, "DESeq2_all_results_with_taxonomy.tsv")


# ============================================================================= 
# OPTIONAL: SHRINK LOG2 FOLD CHANGES
# ============================================================================= 

# Shrinkage helps stabilize log2 fold changes, especially for low-abundance ASVs.
# This improves interpretability by reducing the influence of noisy, low-count features.

# This step uses the 'apeglm' method, which applies a Bayesian shrinkage approach.
# Note: Warnings during lfcShrink are common and don't invalidate the results ‚Äî the method is still reliable.
# You might see warnings (e.g., convergence issues), but they're common and usually not critical.
# The output is still usable ‚Äî just interpret very small changes with caution.

res_final <- lfcShrink(DESeq2_obj, coef = "TreatmentCH4_NH4Cl.LabelLabelled", type = "apeglm")

# ============================================================================
# SUMMARIZE AND FILTER SHRUNK RESULTS
# ============================================================================

# Display a quick summary: how many ASVs are up/downregulated, etc.
summary(res_final)

# Print the top 10 most statistically significant ASVs (lowest FDR values)
head(res_final[order(res_final$padj), ], 10)

# ============================================================================
# ADD TAXONOMY AND FILTER SIGNIFICANT RESULTS
# ============================================================================

# Convert DESeq2 result into a data frame and add ASV names as a column
res_df <- res_final %>%
  data.frame() %>%
  rownames_to_column("taxon")

# Extract the taxonomy table and convert it into a data frame with ASV names
tax <- tax_table(Ps_obj_SIP) %>% as.data.frame() %>% rownames_to_column("taxon")

# Join taxonomy to the DESeq2 results, filter for significant ASVs (FDR < 0.1),
# and sort them by adjusted p-value (padj)
res_sig_tax <- res_df %>%
  left_join(tax, by = "taxon") %>%
  filter(!is.na(padj), padj < 0.1) %>%
  arrange(padj)

# ============================================================================
# SAVE RESULTS
# ============================================================================


# Save the table of significantly differentially abundant ASVs with taxonomy
write_tsv(res_sig_tax, "DESeq2_interaction_CH4_vs_CH4NH4Cl.tsv")

# Save the full DESeq2 object in case you want to reload and explore later
saveRDS(DESeq2_obj, "Peatland_SIP_DESeq2_treatment_effect.rds")


```

Interpretation 

    Positive log‚ÇÇ fold change: The ¬π¬≥C-incorporation response is stronger in CH4+NH‚ÇÑCl than in CH4
    Negative log‚ÇÇ fold change: The response is weaker in CH4+NH‚ÇÑCl
    Significant ASVs: Taxa whose ¬π¬≥C-incorporation is modulated by NH‚ÇÑ‚Å∫
     

You can then ask: 

    "Are the taxa that show a treatment effect the same ones identified by ANCOM-BC?" 
      simple volcano plot to visualize the interaction effect:
```{r Visualization}

# ============================================================================= 
# STEP 5: VISUALIZE THE RESULTS (VOLCANO PLOT)
# ============================================================================= 
# A volcano plot shows:
# - X-axis: How big the change is (log2 fold change)
# - Y-axis: How significant it is (-log10(p-value))
# - Red dots: Significant ASVs

library(ggplot2)

# Get the final interaction results
res_final <- results(DESeq2_obj, name = "TreatmentCH4_NH4Cl.LabelLabelled")
res_df <- as.data.frame(res_final) %>% rownames_to_column("taxon")

# Mark which ASVs are significant
res_df <- res_df %>%
  mutate(Significant = ifelse(padj < 0.1 & !is.na(padj), "Yes", "No"))

# Create the volcano plot
p <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj), color = Significant)) +
  geom_point(alpha = 0.6, size = 2) +  # Points for each ASV
  geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "gray30") +  # LFC threshold
  geom_hline(yintercept = -log10(0.1), linetype = "dashed", color = "gray30") +  # FDR threshold
  labs(
    title = "DESeq2: Treatment √ó Label Interaction",
    subtitle = "CH4+NH‚ÇÑCl vs CH4 in Heavy DNA",
    x = "Log‚ÇÇ Fold Change",
    y = "-log‚ÇÅ‚ÇÄ(adj. p-value)"
  ) +
  scale_color_manual(values = c("Yes" = "red", "No" = "gray70")) +
  theme_minimal() +
  theme(legend.position = "top")

# Show the plot
print(p)

# Create a folder to store DESeq2 results and figures if it doesn't already exist
output_dir <- "DESeq2_outputs"
if (!dir.exists(output_dir)) {
  dir.create(output_dir, recursive = TRUE)
}

# Save the plot as PDF and PNG in the output directory
ggsave(file.path(output_dir, "DESeq2_interaction_volcano.pdf"), plot = p, width = 10, height = 8)
ggsave(file.path(output_dir, "DESeq2_interaction_volcano.png"), plot = p, width = 10, height = 8, dpi = 300)
ggsave(file.path(output_dir, "DESeq2_interaction_volcano.svg"), plot = p, width = 10, height = 8, dpi = 300)
```

Interpretation Guide (For Anyone) 

    Positive log‚ÇÇ fold change:
    The ¬π¬≥C-incorporation response is stronger in CH4+NH‚ÇÑCl than in CH4.
    ‚Üí These microbes like methane more when ammonium is added. 

    Negative log‚ÇÇ fold change:
    The response is weaker in CH4+NH‚ÇÑCl.
    ‚Üí Ammonium suppresses their methane consumption. 

    Significant ASVs:
    These are the specific microbes whose response to ¬π¬≥C-methane is changed by NH‚ÇÑ‚Å∫. 
     

 
üí° Key Question to Ask 

    "Are the same microbes responding in both ANCOM-BC and DESeq2?" 
     

    Compare the top ASVs from ANCOM-BC (per-gradient) and DESeq2 (across gradients).
    Do they include known methanotrophs like Methylomonas or Methylobacter?
    Does NH‚ÇÑ‚Å∫ consistently enhance or suppress the same taxa?
     

